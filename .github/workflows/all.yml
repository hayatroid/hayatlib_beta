name: verify & bundle & doc
on:
  push:
    branches:
      - "main"
  pull_request:
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  setup:
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up competitive-verifier
        uses: competitive-verifier/actions/setup@v2
        with:
          cache-pip: true

      # Initialize your own environment for resolving.
      # required only if you set `languages.rust.list_dependencies_backend.kind` to `"cargo-udeps"`
      - name: Set up Rust (nightly)
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          targets: x86_64-unknown-linux-gnu
      - name: Install cargo-udeps for Rust
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-udeps
          cache-key: cargo-udeps-key
      - name: oj-resolve
        uses: competitive-verifier/actions/oj-resolve@v2
        with:
          output-path: verify_files.json
          # Specify patterns
          # include: your-own-include/
          # exclude: your-own-exclude/
          # If you have config.toml
          # config: .verify-helper/config.toml

      - name: Upload verify_files.json
        uses: competitive-verifier/actions/upload-verify-artifact@v2
        with:
          file: verify_files.json

      - name: Check bundled
        id: test-bundled
        run: |
          echo "count=$(find .competitive-verifier/bundled/ -type f | wc -l)" >> $GITHUB_OUTPUT
      - name: Upload bundled
        uses: actions/upload-artifact@v4
        if: steps.test-bundled.outputs.count > 0
        with:
          name: Bundled-${{ runner.os }}
          path: .competitive-verifier/bundled
          retention-days: 1

  verify:
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      SPLIT_SIZE: "20"
    strategy:
      matrix:
        # prettier-ignore
        index:
          ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09",
           "10", "11", "12", "13", "14", "15", "16", "17", "18", "19"]
    steps:
      - uses: actions/checkout@v4

      - name: Download verify_files.json
        uses: competitive-verifier/actions/download-verify-artifact@v2

      - name: Set up competitive-verifier
        uses: competitive-verifier/actions/setup@v2
        with:
          cache-pip: true
      # Initialize your own environment for verification.
      - name: Set up Rust (1.70.0)
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "1.70.0"
          targets: x86_64-unknown-linux-gnu

      - name: Verify
        uses: competitive-verifier/actions/verify@v2
        with:
          destination: ${{runner.temp}}/result.json
          split-size: ${{ env.SPLIT_SIZE }}
          split-index: ${{ matrix.index }}
          timeout: 1800

      - name: Upload result artifact
        uses: actions/upload-artifact@v4
        with:
          name: Result-${{ runner.os }}-${{ matrix.index }}
          path: ${{runner.temp}}/result.json
          retention-days: 1

  bundle:
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    needs: verify
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
  
    - name: Install procon-bundler for Rust
      uses: baptiste0928/cargo-install@v3
      with:
        crate: procon-bundler
        git: https://github.com/ngtkana/procon-bundler
  
    - name: Generate bundle.rs
      run: |
        procon-bundler bundle ../hayatlib > bundle.rs
  
    - name: Push bundle.rs
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git remote set-url origin https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}

        git config --global user.name "GitHub"
        git config --global user.email "noreply@github.com"
        git add bundle.rs

        if (git diff --cached --shortstat | grep '[0-9]'); then
          git commit -m "[auto-bundler] bundle commit ${GITHUB_SHA}"
          git push origin HEAD:${GITHUB_REF}
        else
          echo "No changes found in bundle.rs"
        fi

  doc:
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    needs: verify
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
  
    - name: Clean doc
      run: cargo clean --doc
  
    - name: Generate doc
      run: RUSTDOCFLAGS="--html-in-header katex-header.html" cargo doc --no-deps
  
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/doc/
